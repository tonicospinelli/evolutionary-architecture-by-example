name: Chapter 1 workflow

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'Chapter-1-initial-architecture/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'Chapter-1-initial-architecture/**'

env:
  CHAPTER_DIR: 'Chapter-1-initial-architecture'

jobs: 
  build:
    defaults:
      run:
        working-directory: ${{ env.CHAPTER_DIR }}/Src
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore          
#
#      - name: 'Code Analysis'
#        uses: ./.github/actions/sonarcloud
#        with:
#          sonar_organization: tonicospinelli
#          sonar_project: tonicospinelli_evolutionary-architecture-by-example_chapter-1

  test:
    defaults:
      run:
        working-directory: ${{ env.CHAPTER_DIR }}/Src
    runs-on: ubuntu-latest
    name: Test
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
#      - name: Install DotCover
#        run: dotnet tool install --global JetBrains.dotCover.GlobalTool
#      - name: Test with DotCover
#        run: dotnet dotcover test --dcReportType=HTML
#      - name: Test
#        run: dotnet test --no-restore --verbosity normal --collect:"XPlat Code Coverage"
      - name: Install DotNet Coverage
        run: dotnet tool install --global dotnet-coverage
      - name: Test
        run: dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ env.CHAPTER_DIR }}/Src
          args: >
            -Dsonar.organization=tonicospinelli
            -Dsonar.projectKey=tonicospinelli_evolutionary-architecture-by-example_chapter-1
            -Dsonar.cs.vscoveragexml.reportsPaths=coverage.xml
#            -Dsonar.coverage.exclusions="**Test*.cs"
            -Dsonar.sources=.
#            -Dsonar.test.exclusions=*Tests/**
#            -Dsonar.exclusions=*Tests/
            -Dsonar.verbose=true
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CODE_COV_TOKEN }}
