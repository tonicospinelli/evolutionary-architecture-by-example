name: Chapter 1 workflow

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/chapter-1-workflow.yml'
      - 'Chapter-1-initial-architecture/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/chapter-1-workflow.yml'
      - 'Chapter-1-initial-architecture/**'

env:
  CHAPTER_DIR: 'Chapter-1-initial-architecture'

jobs: 
  build:
    defaults:
      run:
        working-directory: ${{ env.CHAPTER_DIR }}/Src
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore          
#
#      - name: 'Code Analysis'
#        uses: ./.github/actions/sonarcloud
#        with:
#          sonar_organization: tonicospinelli
#          sonar_project: tonicospinelli_evolutionary-architecture-by-example_chapter-1

  test:
    defaults:
      run:
        working-directory: ${{ env.CHAPTER_DIR }}/Src
    runs-on: ubuntu-latest
    name: Test
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet tool install --global coverlet.console
      - name: Restore dependencies
        run: dotnet restore
      - name: Coverlet
        run: coverlet .\CovExample.Tests\bin\Debug\net6.0\CovExample.Tests.dll --target "dotnet" --targetargs "test --no-build" -f=opencover -o="coverage.xml"
      - name: Test
        run: dotnet test --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./${{ env.CHAPTER_DIR }}/Src
          args: >
            -Dsonar.organization=tonicospinelli
            -Dsonar.projectKey=tonicospinelli_evolutionary-architecture-by-example_chapter-1
            -Dsonar.cs.opencover.reportsPaths=**/TestResults/**/coverage.opencover.xml
            -Dsonar.cs.vstest.reportsPaths=**/TestResults/*.trx
            -Dsonar.sources=.
            -Dsonar.tests=./Fitnet.ArchitectureTests,./Fitnet.IntegrationTests,./Fitnet.UnitTests
            -Dsonar.verbose=true
            -Dsonar.coverage.exclusions=**Test*.cs
            -Dsonar.exclusions="**/TestResults/**"
      - name: view result
        run: |
          find . -type f -name '*opencover.xml' -exec sed -i 's/\/home.*Src\/Fitnet/Fitnet/g' {} \;
          cat $GITHUB_WORKSPACE/${{ env.CHAPTER_DIR }}/Src/Fitnet.UnitTests/TestResults/*/coverage.opencover.xml

  testCoverlet:
    defaults:
      run:
        working-directory: ${{ env.CHAPTER_DIR }}/Src
    runs-on: ubuntu-latest
    name: Test Coverlet
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet tool install --global coverlet.console
      - name: Restore dependencies
        run: dotnet restore
      - name: Coverlet Test
        run: coverlet .\CovExample.Tests\bin\Debug\net6.0\CovExample.Tests.dll --target "dotnet" --targetargs "test --no-build" -f=opencover -o="coverage.xml"
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./${{ env.CHAPTER_DIR }}/Src
          args: >
            -Dsonar.organization=tonicospinelli
            -Dsonar.projectKey=tonicospinelli_evolutionary-architecture-by-example_chapter-1
            -Dsonar.cs.opencover.reportsPaths=**/coverage.xml
            -Dsonar.sources=.
            -Dsonar.tests=./Fitnet.ArchitectureTests,./Fitnet.IntegrationTests,./Fitnet.UnitTests
            -Dsonar.verbose=true
            -Dsonar.coverage.exclusions=**Test*.cs
      - name: view result
        run: |
          find . -type f -name '*opencover.xml' -exec sed -i 's/\/home.*Src\/Fitnet/Fitnet/g' {} \;
          cat $GITHUB_WORKSPACE/${{ env.CHAPTER_DIR }}/Src/*/coverage.xml
